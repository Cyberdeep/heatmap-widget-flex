<?xml version="1.0" encoding="utf-8"?>
<!--
///////////////////////////////////////////////////////////////////////////
// Copyright (c) 2008-2013 Esri. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
///////////////////////////////////////////////////////////////////////////
-->
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:esri="http://www.esri.com/2008/ags"
               xmlns:samples="library://ns.esri.com/github/2013/flex/samples">
    <fx:Script>
        <![CDATA[
            import com.esri.ags.events.DetailsEvent;
            import com.esri.ags.events.LayerEvent;
            import com.esri.ags.layers.supportClasses.TimeInfo;
            import com.esri.ags.samples.events.HeatMapEvent;
            import com.esri.ags.samples.layers.supportClasses.HeatMapGradientDict;
            import com.esri.ags.samples.utils.ColorMatrixUtil;

            import mx.collections.ArrayCollection;

            import spark.events.IndexChangeEvent;

            protected function updateStartHandler(event:LayerEvent):void
            {
                trace("updateStartHandler");
            }

            protected function updateEndHandler(event:LayerEvent):void
            {
                trace("updateEndHandler");
            }

            protected function loadHandler(event:LayerEvent):void
            {
                trace("loadHandler");
            }

            protected function loadErrorHandler(event:LayerEvent):void
            {
                trace("loadErrorHandler");
            }

            protected function isInScaleRangeChangeHandler(event:LayerEvent):void
            {
                trace("isInScaleRangeChangeHandler");
            }

            protected function refreshStartHandler(event:HeatMapEvent):void
            {
                trace("refreshStartHandler");
                heatMapLayer.filters = [ ColorMatrixUtil.blackAndWhiteFilter ];
                fadeEffectOut.play();
            }

            protected function refreshEndHandler(event:HeatMapEvent):void
            {
                trace("refreshEndHandler");
                fadeEffectIn.play();
                heatMapLayer.filters = [];
                dg.dataProvider = new ArrayCollection(event.featureSet.features);
            }

            protected function getDetailsCompleteHandler(event:DetailsEvent):void
            {
                trace("getDetailsCompleteHandler");
                var timeInfo:TimeInfo = event.layerDetails.timeInfo;
                myTimeSlider.createTimeStopsByTimeInterval(timeInfo.timeExtent, timeInfo.timeInterval, timeInfo.timeIntervalUnits);
                map.timeExtent = timeInfo.timeExtent;

            }

            protected function themeChangeHandler(event:IndexChangeEvent):void
            {
                heatMapLayer.theme = ComboBox(event.target).selectedItem.data;

            }

            protected function magLabelFunction(item:Object, column:GridColumn):String
            {
                var fieldNameComponents:Array = column.dataField.split(".");
                if (fieldNameComponents.length > 0)
                {

                    return numberFormatter.format(item.attributes[fieldNameComponents[1]]);
                }
                else
                {
                    return "NaN";
                }
            }

            protected function dateLabelFunction(item:Object, column:GridColumn):String
            {
                var fieldNameComponents:Array = column.dataField.split(".");
                if (fieldNameComponents.length > 0)
                {

                    return convertMillisecondsToDate(item.attributes[fieldNameComponents[1]], "MMM dd, yyyy", false);
                }
                else
                {
                    return "NaN";
                }
            }

            protected function convertMillisecondsToDate(ms:Number, dateFormat:String, useUTC:Boolean):String
            {
                var date:Date = new Date(ms);
                if (date.milliseconds == 999) // workaround for REST bug
                {
                    date.milliseconds++;
                }
                if (useUTC)
                {
                    date.minutes += date.timezoneOffset;
                }

                if (dateFormat)
                {
                    dateFormatter.dateTimePattern = dateFormat;
                    var result:String = dateFormatter.format(date);
                    if (result)
                    {
                        return result;
                    }
                    else
                    {
                        return dateFormatter.errorText;
                    }
                }
                else
                {
                    return date.toLocaleString();
                }
            }
        ]]>
    </fx:Script>
    <fx:Declarations>
        <!-- Place non-visual elements (e.g., services, value objects) here -->
        <s:Fade id="fadeEffectOut"
                alphaFrom="1"
                alphaTo="0.5"
                repeatCount="1"
                targets="{[heatMapLayer]}"/>
        <s:Fade id="fadeEffectIn"
                alphaFrom="0.5"
                alphaTo="1"
                repeatCount="1"
                targets="{[heatMapLayer]}"/>
        <!-- http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/spark/formatters/DateTimeFormatter.html -->
        <s:DateTimeFormatter id="dateFormatter" dateTimePattern="MMMM yyyy"/>
        <!-- http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/spark/formatters/NumberFormatter.html -->
        <s:NumberFormatter id="numberFormatter" fractionalDigits="2"/>
    </fx:Declarations>

    <esri:Map id="map" timeSlider="{myTimeSlider}">
        <esri:ArcGISTiledMapServiceLayer url="http://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer"/>
        <samples:ArcGISHeatMapLayer id="heatMapLayer"
                                    alpha="0.7"
                                    getDetailsComplete="getDetailsCompleteHandler(event)"
                                    isInScaleRangeChange="isInScaleRangeChangeHandler(event)"
                                    load="loadHandler(event)"
                                    loadError="loadErrorHandler(event)"
                                    outFields="*"
                                    refreshEnd="refreshEndHandler(event)"
                                    refreshStart="refreshStartHandler(event)"
                                    updateEnd="updateEndHandler(event)"
                                    updateStart="updateStartHandler(event)"
                                    url="http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/Earthquakes/Since_1970/MapServer/0"
                                    useAMF="true"
                                    where="Magnitude > 0"/>
    </esri:Map>

    <s:Group width="330" height="250"
             right="20" top="20">
        <s:RectangularDropShadow left="0" right="0" top="0" bottom="0"
                                 alpha="1"
                                 angle="90"
                                 blRadius="5"
                                 blurX="6"
                                 blurY="6"
                                 brRadius="5"
                                 color="#000000"
                                 distance="1"
                                 tlRadius="5"
                                 trRadius="5"/>
        <s:Rect left="0" right="0" top="0" bottom="0"
                radiusX="5"
                radiusY="5">
            <s:fill>
                <s:SolidColor alpha="0.7" color="0xC5C5C9"/>
            </s:fill>
        </s:Rect>
        <s:VGroup width="100%"
                  gap="10"
                  paddingBottom="10"
                  paddingLeft="10"
                  paddingRight="10"
                  paddingTop="10">

            <s:ComboBox change="themeChangeHandler(event)" selectedIndex="0">
                <s:ArrayList>
                    <fx:Object data="{HeatMapGradientDict.RAINBOW_TYPE}" label="Rainbow"/>
                    <fx:Object data="{HeatMapGradientDict.THERMAL_TYPE}" label="Thermal"/>
                    <fx:Object data="{HeatMapGradientDict.RED_WHITE_BLUE_TYPE}" label="Red, White, Blue"/>
                </s:ArrayList>
            </s:ComboBox>
            <esri:TimeSlider id="myTimeSlider"
                             enabled="{heatMapLayer.loaded}"
                             thumbCount="2"/>
            <s:Label fontSize="14"
                     fontWeight="bold"
                     text="{dateFormatter.format(myTimeSlider.timeExtent.endTime)}"/>
            <s:DataGrid id="dg"
                        width="100%" height="35%">
                <s:columns>
                    <s:ArrayList>
                        <!--
                        {"name":"OBJECTID","type":"esriFieldTypeOID","alias":"Object Id"},
                        {"name":"Tsu","type":"esriFieldTypeString","alias":"Tsunami","length":255},
                        {"name":"Name","type":"esriFieldTypeString","alias":"Name","length":255},
                        {"name":"Latitude","type":"esriFieldTypeDouble","alias":"Latitude"},
                        {"name":"Longitude","type":"esriFieldTypeDouble","alias":"Longitude"},
                        {"name":"Focal","type":"esriFieldTypeDouble","alias":"Focal"},
                        {"name":"Magnitude","type":"esriFieldTypeDouble","alias":"Magnitude"},
                        {"name":"Num_Deaths","type":"esriFieldTypeDouble","alias":"Number of Deaths"},
                        {"name":"Num_Injured","type":"esriFieldTypeDouble","alias":"Number of Injured People"},
                        {"name":"Mill_Damages","type":"esriFieldTypeDouble","alias":"Damages (Million$)"},
                        {"name":"Num_Houses_Dest","type":"esriFieldTypeDouble","alias":"Houses Destroyed"},
                        {"name":"Num_Houses_Dam","type":"esriFieldTypeDouble","alias":"Houses Damaged"},
                        {"name":"Date_","type":"esriFieldTypeDate","alias":"Earthquake Date","length":8},
                        {"name":"YYYYMMDD","type":"esriFieldTypeString","alias":"YYYYMMDD","length":255},
                        {"name":"Shape","type":"esriFieldTypeGeometry","alias":"Shape"}
                        -->
                        <s:GridColumn dataField="attributes.Magnitude"
                                      headerText="Magnitude"
                                      labelFunction="magLabelFunction"/>
                        <s:GridColumn dataField="attributes.Date_"
                                      headerText="Date"
                                      labelFunction="dateLabelFunction"/>
                        <!--
                        <s:GridColumn dataField="attributes.source" headerText="Source"/>
                        <s:GridColumn dataField="attributes.region" headerText="Region"/>
                        <s:GridColumn dataField="attributes.numstations" headerText="No. Stations"/>
                        <s:GridColumn dataField="attributes.latitude" headerText="Lat"/>
                        <s:GridColumn dataField="attributes.longitude" headerText="Long"/>
                        -->
                    </s:ArrayList>
                </s:columns>
            </s:DataGrid>
        </s:VGroup>

    </s:Group>
</s:Application>
